Algorithm:

Now consider cases where the array contains few elements to remove. For example, nums=[1,2,3,5,4],val=4nums = [1,2,3,5,4], val = 4nums=[1,2,3,5,4],val=4. 
The previous algorithm will do unnecessary copy operation of the first four elements. 
Another example is nums=[4,1,2,3,5],val=4nums = [4,1,2,3,5], val = 4nums=[4,1,2,3,5],val=4. 
It seems unnecessary to move elements [1,2,3,5][1,2,3,5][1,2,3,5] one step left as the problem description mentions that the order of elements could be changed.

When we encounter nums[i]=val, we can skip the current element.

When we encounter nums[i]ÔºÅ=val, we can swap the current element out with the index element and dispose the index one. 
This essentially reduces the array's size by 1.

Note that the last element that was swapped in could be the value you want to remove itself. But don't worry, in the next iteration we will still check this element.

Complexity Analysis

Time complexity : O(n). In worst case, only two scans of the whole array are needed.

Space complexity : O(1). No extra space is used. In place replacements are done.

